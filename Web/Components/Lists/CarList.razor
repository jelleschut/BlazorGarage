@inject ICarService CarService

<div class="row">
    <div class="col-2 mb-3">
        <h5>Search</h5>
        <div class="input-group no-color">
            <input class="form-control" @bind="searchParam" @bind:event="oninput" />
        </div>
    </div>
</div>

@if (Cars == null)
{
    <Spinner />
}
else
{
    <table class="table table-striped table-hover table-sm">
        <thead class="thead-dark">
            <tr class="d-flex">
                <th class="col-2">
                    License Number
                </th>
                <th class="col-2">
                    Brand
                </th>
                <th class="col-2" >
                    Model
                </th>
                <th class="col-2">
                    Owner
                </th>
                <th class="col-2">
                    Driver
                </th>
                <th class="col-2">

                </th>
            </tr>
        </thead>
        <tbody class="border">
            @foreach (var car in FilteredCars)
            {
                <tr class="d-flex">
                    <td class="col-2">
                        @car.LicenseNumber
                    </td>
                    <td class="col-2">
                        @car.Brand
                    </td>
                    <td class="col-2">
                        @car.Model
                    </td>
                    <td class="col-2">
                        @car.Owner.Name
                    </td>
                    <td class="col-2">
                        @car.Driver.Name
                    </td>
                    <td class="col-2">
                        <button class="btn btn-sm btn-info" @onclick="@(async () => await DetailsCallback.InvokeAsync(car.CarId))">Details</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    List<Car> Cars { get; set; } = new List<Car>();

    string searchParam { get; set; } = "";
    string currentSortColumn = "LicenseNumber";

    [Parameter]
    public EventCallback<int> DetailsCallback { get; set; }

    protected async override Task OnInitializedAsync()
    {
        Cars = (await CarService.GetAll()).ToList();
    }

    List<Car> FilteredCars => Cars.Where(c => c.LicenseNumber.ToLower().Contains(searchParam.ToLower())
                                   || c.Brand.ToLower().Contains(searchParam.ToLower())
                                   || c.Model.ToLower().Contains(searchParam.ToLower())
                                   || c.Owner.Name.ToLower().Contains(searchParam.ToLower())
                                   || c.Driver.Name.ToLower().Contains(searchParam.ToLower())).ToList();
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RDWCommunicationReference
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RDWDto", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    public partial class RDWDto : object
    {
        
        private string BrandField;
        
        private string LicenseNumberField;
        
        private string ModelField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Brand
        {
            get
            {
                return this.BrandField;
            }
            set
            {
                this.BrandField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicenseNumber
        {
            get
            {
                return this.LicenseNumberField;
            }
            set
            {
                this.LicenseNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model
        {
            get
            {
                return this.ModelField;
            }
            set
            {
                this.ModelField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RDWCommunicationReference.IRDWCommunication")]
    public interface IRDWCommunication
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRDWCommunication/GetCarData", ReplyAction="http://tempuri.org/IRDWCommunication/GetCarDataResponse")]
        System.Threading.Tasks.Task<RDWCommunicationReference.RDWDto> GetCarDataAsync(string licenseNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRDWCommunication/GetInspection", ReplyAction="http://tempuri.org/IRDWCommunication/GetInspectionResponse")]
        System.Threading.Tasks.Task<System.Nullable<System.DateTime>> GetInspectionAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IRDWCommunicationChannel : RDWCommunicationReference.IRDWCommunication, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class RDWCommunicationClient : System.ServiceModel.ClientBase<RDWCommunicationReference.IRDWCommunication>, RDWCommunicationReference.IRDWCommunication
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public RDWCommunicationClient() : 
                base(RDWCommunicationClient.GetDefaultBinding(), RDWCommunicationClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IRDWCommunication.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RDWCommunicationClient(EndpointConfiguration endpointConfiguration) : 
                base(RDWCommunicationClient.GetBindingForEndpoint(endpointConfiguration), RDWCommunicationClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RDWCommunicationClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(RDWCommunicationClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RDWCommunicationClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(RDWCommunicationClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RDWCommunicationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<RDWCommunicationReference.RDWDto> GetCarDataAsync(string licenseNumber)
        {
            return base.Channel.GetCarDataAsync(licenseNumber);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<System.DateTime>> GetInspectionAsync()
        {
            return base.Channel.GetInspectionAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IRDWCommunication))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IRDWCommunication))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:57920/RDWCommunication.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return RDWCommunicationClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IRDWCommunication);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return RDWCommunicationClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IRDWCommunication);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IRDWCommunication,
        }
    }
}
